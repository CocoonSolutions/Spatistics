group_by(country) %>%
summarise(y=n()) %>%
arrange(country)
ggplot(totalorderspercountry,aes(x=reorder(country, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('green',0.3)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalespercountry = datainput0 %>%
group_by(country) %>%
summarise(y=sum(sales)) %>%
arrange(country)
ggplot(totalsalespercountry,aes(x=reorder(country, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('blue',0.2)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantitypercountry = datainput0 %>%
group_by(country) %>%
summarise(y=sum(quantity)) %>%
arrange(country)
View(datainput0)
library(ggplot2)
totalorderspercountry = datainput0 %>%
group_by(country) %>%
summarise(y=n()) %>%
arrange(country)
ggplot(totalorderspercountry,aes(x=reorder(country, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('green',0.3)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalespercountry = datainput0 %>%
group_by(country) %>%
summarise(y=sum(sales)) %>%
arrange(country)
ggplot(totalsalespercountry,aes(x=reorder(country, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('blue',0.2)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantitypercountry = datainput0 %>%
group_by(country) %>%
summarise(y=sum(quantity)) %>%
arrange(country)
ggplot(totalquantitypercountry,aes(x=reorder(country, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('red',0.2)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
rm(list = ls()[!(ls() %in% c('datainput0','datainput1','datainput2links','datainput2nodes'))])
# itemline dim analysis
library(ggplot2)
totalordersperline = datainput0 %>%
group_by(itemline) %>%
summarise(y=n()) %>%
arrange(itemline)
ggplot(totalordersperline,aes(x=reorder(itemline, -y), y=y)) + geom_bar(stat = "identity", fill=alpha('green',0.3)) + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
# itemline dim analysis
library(ggplot2)
totalordersperlinecat = datainput0 %>%
group_by(itemline, itemcategory) %>%
summarise(y=n()) %>%
arrange(itemline, itemcategory)
View(totalordersperline)
View(totalordersperlinecat)
ggplot(totalordersperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar(position="dodge", stat="identity")
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline)
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1))
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar(position="dodge", stat="identity")
totalordersperlinecatgroup = datainput0 %>%
group_by(itemline, itemcategory, itemgroup) %>%
summarise(y=n()) %>%
arrange(itemline, itemcategory, itemgroup)
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemline, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemgroup) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemgroup, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemcategory, color=itemgroup, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemcategory, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemcategory, color=itemline, fill=itemline)) +
geom_bar( stat="identity") +
facet_wrap(~itemgroup) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemline, fill=itemline)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemcategory, fill=itemline)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemline)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
###### testing
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemline, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_text(angle=60, hjust=1)) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(data, aes(fill=itemline, y=y, x=itemcategory)) +
geom_bar( stat="identity", position="fill")
ggplot(totalordersperlinecat, aes(fill=itemline, y=y, x=itemcategory)) +
geom_bar( stat="identity", position="fill")
ggplot(totalordersperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar( stat="identity", position="fill") + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar( stat="identity", position="fill")  + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
rm(list = ls()[!(ls() %in% c('datainput0','datainput1','datainput2links','datainput2nodes'))])
library(ggplot2)
totalordersperlinecat = datainput0 %>%
group_by(itemline, itemcategory) %>%
summarise(y=n()) %>%
arrange(itemline, itemcategory)
ggplot(totalordersperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalordersperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar( stat="identity", position="fill")  + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalordersperlinecatgroup = datainput0 %>%
group_by(itemline, itemcategory, itemgroup) %>%
summarise(y=n()) %>%
arrange(itemline, itemcategory, itemgroup)
ggplot(totalordersperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalesperlinecat = datainput0 %>%
group_by(itemline, itemcategory) %>%
summarise(y=sum(sales)) %>%
arrange(itemline, itemcategory)
ggplot(totalsalesperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalsalesperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar( stat="identity", position="fill")  + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalesperlinecatgroup = datainput0 %>%
group_by(itemline, itemcategory, itemgroup) %>%
summarise(y=sum(sales)) %>%
arrange(itemline, itemcategory, itemgroup)
ggplot(totalsalesperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantityperlinecat = datainput0 %>%
group_by(itemline, itemcategory) %>%
summarise(y=sum(quantity)) %>%
arrange(itemline, itemcategory)
ggplot(totalquantityperlinecat, aes(y=y, x=itemcategory, color=itemcategory, fill=itemcategory)) +
geom_bar( stat="identity") +
facet_wrap(~itemline) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalquantityperlinecat, aes(fill=itemcategory, y=y, x=itemline)) +
geom_bar( stat="identity", position="fill")  + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantityperlinecatgroup = datainput0 %>%
group_by(itemline, itemcategory, itemgroup) %>%
summarise(y=sum(quantity)) %>%
arrange(itemline, itemcategory, itemgroup)
ggplot(totalquantityperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
rm(list = ls()[!(ls() %in% c('datainput0','datainput1','datainput2links','datainput2nodes'))])
library(dplyr)
totalorderspersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(total=n()) %>%
arrange(itemsizerank)
View(totalorderspersize)
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) +
geom_bar( stat="identity")
library(dplyr)
totalorderspersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=n()) %>%
arrange(itemsizerank)
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) +
geom_bar( stat="identity")
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_text(angle=60, hjust=1))+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantityperlinecatgroup = datainput0 %>%
group_by(itemline, itemcategory, itemgroup) %>%
summarise(y=sum(quantity)) %>%
arrange(itemline, itemcategory, itemgroup)
ggplot(totalquantityperlinecatgroup, aes(y=y, x=itemgroup, color=itemgroup, fill=itemgroup)) +
geom_bar( stat="identity") +
facet_wrap(~itemcategory) + theme(axis.text.x=element_blank()) + theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
library(dplyr)
totalorderspersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=n()) %>%
arrange(itemsizerank)
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalespersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=sum(sales)) %>%
arrange(itemsizerank)
ggplot(totalsalespersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantitypersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=sum(quantity)) %>%
arrange(itemsizerank)
ggplot(totalquantitypersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
rm(list = ls()[!(ls() %in% c('datainput0','datainput1','datainput2links','datainput2nodes'))])
View(datainput1)
shiny::runApp('C:/Users/PC001/Desktop/shiny-examples-master/118-highcharter-births')
runApp('C:/Users/PC001/Desktop/shiny-examples-master/054-nvd3-line-chart-output')
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/calendar')
install.packages('googleCharts')
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/calendar')
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/test')
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/timeline')
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
getwd()
View(data)
View(datainput1)
runApp()
runApp()
runApp()
library("googleCharts", lib.loc="C:/Program Files/R/R-3.3.3/library")
remove.packages('googleCharts')
runApp()
shiny::runApp()
runApp()
library('googleChart')
library('googleCharts')
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
shiny::runApp()
runApp()
runApp()
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
remove.packages('googleCharts')
library(googleCharts)
runApp()
runApp()
runApp()
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
runApp()
runApp()
runApp()
library(dplyr)
totalorderspersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=n()) %>%
arrange(itemsizerank)
ggplot(totalorderspersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalsalespersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=sum(sales)) %>%
arrange(itemsizerank)
ggplot(totalsalespersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
totalquantitypersize = datainput0 %>%
group_by(itemsizerank) %>%
summarise(y=sum(quantity)) %>%
arrange(itemsizerank)
ggplot(totalquantitypersize, aes(y=y, x=itemsizerank, color=itemsizerank, fill=itemsizerank)) + geom_bar( stat="identity")  + theme(axis.text.x=element_blank())+ theme(axis.title.x=element_blank(),  axis.ticks.x=element_blank()) + theme(axis.title.y=element_blank(), axis.ticks.y=element_blank())
View(data)
###################
library(dplyr)
datainput2 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(orders=n(),quantity=sum(quantity), sales=sum(sales))
rm(datainput2)
#######################################################
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(orders=n(),quantity=sum(quantity), sales=sum(sales))
View(datainput3)
#-- save rds
saveRDS(
datainput3,
"C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/datainput3.rds"
)
rm(datainput3)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(orders=n(),quantity=sum(quantity), sales=sum(sales))
View(datainput3)
min(datainput3$sales)
View(datainput3)
max(datainput3$sales)
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
runApp()
runApp()
runApp()
datainput3[1,1]
datainput3[2,1]
datainput3[2,2]
View(datainput3)
datainput3[3]
datainput3[3,1]
datainput3[3[1]]
a = datainput3[3]
a
typeof(a)
a[1]
a[1][1]
typeof(a[1])
datainput3[[3]]
datainput3[[3]][1]
gsub('-','',datainput3[[3]][1])
as.integer(gsub('-','',datainput3[[3]][1]))
a = datainput3
a$issueyearmon = as.integer(gsub('-','',a[[3]]))
a$issueyearmon = as.numeric(gsub('-','',a[[3]]))
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(orders=n(),quantity=sum(quantity), sales=sum(sales))
datainput3$issueyearmon = as.numeric(gsub('-','',datainput3[[3]]))
datainput3$orders = as.numeric(datainput3$orders)
runApp()
datag = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
runApp()
runApp()
runApp()
runApp()
names = levels(datag$itemsize))
runApp()
View(datag)
runApp()
runApp()
runApp()
runApp( display.mode = "showcase")
runApp()
runApp()
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyearmon) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
View(datainput3)
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
View(datainput3)
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
datainput3$issueyear = as.numeric(datainput3$issueyear)
datainput3$orders = as.numeric(datainput3$orders)
datainput3$itemsize = as.factor(datainput3$itemsize)
datainput3$group <- ifelse(datainput3$itemsize=='400-600', "A",ifelse(datainput3$itemsize=='300-400', "B",ifelse(datainput3$itemsize=='600-800', "c",ifelse(datainput3$itemsize=='SPECIALCUTS', "Z","D"))))
rm(list = ls()[!(ls() %in% c('datainput0','datainput1','datainput2links','datainput2nodes'))])
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
datainput3$issueyear = as.numeric(datainput3$issueyear)
datainput3$orders = as.numeric(datainput3$orders)
datainput3$itemsize = as.factor(datainput3$itemsize)
datainput3$group <- ifelse(datainput3$itemsize=='400-600', "A",ifelse(datainput3$itemsize=='300-400', "B",ifelse(datainput3$itemsize=='600-800', "c",ifelse(datainput3$itemsize=='SPECIALCUTS', "Z","D"))))
datainput3$group = as.factor(datainput3$group)
saveRDS(
datainput3,
"C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/datainput3.rds"
)
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
View(datainput3)
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsizerank, itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
datainput3$issueyear = as.numeric(datainput3$issueyear)
datainput3$orders = as.numeric(datainput3$orders)
datainput3$itemsize = as.factor(datainput3$itemsize)
datainput3$group <- ifelse(datainput3$itemsize=='400-600', "A",ifelse(datainput3$itemsize=='300-400', "B",ifelse(datainput3$itemsize=='600-800', "C",ifelse(datainput3$itemsize=='SPECIALCUTS', "Z","D"))))
datainput3$group = as.factor(datainput3$group)
saveRDS(
datainput3,
"C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/datainput3.rds"
)
runApp()
runApp()
library(dplyr)
datainput3 = datainput0 %>%
group_by(itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
datainput3$issueyear = as.numeric(datainput3$issueyear)
datainput3$orders = as.numeric(datainput3$orders)
datainput3$itemsize = as.factor(datainput3$itemsize)
datainput3$group <- ifelse(datainput3$itemsize=='400-600', "A",ifelse(datainput3$itemsize=='300-400', "B",ifelse(datainput3$itemsize=='600-800', "C",ifelse(datainput3$itemsize=='SPECIALCUTS', "Z","D"))))
datainput3$group = as.factor(datainput3$group)
#-- save rds
saveRDS(
datainput3,
"C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/datainput3.rds"
)
runApp()
library(dplyr)
data = datainput0 %>%
group_by(itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
data$issueyear = as.numeric(data$issueyear)
data$orders = as.numeric(data$orders)
data$itemsize = as.factor(data$itemsize)
data$group <- ifelse(data$itemsize=='400-600', "A",ifelse(data$itemsize=='300-400', "B",ifelse(data$itemsize=='600-800', "C",ifelse(data$itemsize=='SPECIALCUTS', "Z","D"))))
data$group = as.factor(data$group)
#-- save rds
saveRDS(
data,
"C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/data.rds"
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
levels(data$group)
library(dplyr)
data = datainput0 %>%
group_by(itemsize, issueyear) %>%
summarise(
orders = n(),
quantity = sum(quantity),
sales = sum(sales)
)
# transform data
data$issueyear = as.numeric(data$issueyear)
data$orders = as.numeric(data$orders)
data$itemsize = as.factor(data$itemsize)
data$group <- ifelse(data$itemsize=='400-600', "A",ifelse(data$itemsize=='300-400', "B",ifelse(data$itemsize=='600-800', "C",ifelse(data$itemsize=='SPECIALCUTS', "Z","D"))))
data$group = as.factor(data$group)
runApp()
if (!require(devtools))
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
levels(data$group)
library(googleCharts)
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp()
runApp()
runApp()
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble')
runApp('C:/Users/PC001/Desktop/googleCharts-master/inst/examples/bubble', display.mode = 'showcase')
runApp()
runApp()
