-- run app with shiny
> runApp("App-1")

-- display in showcase mode
> runApp("App-1", display.mode = "showcase")

-- load csv
> data= read.csv("C:/Users/PC001/Desktop/StoryTelling/gitRepo/data/data1trans2.csv")

-- shiny leaflet quick implementation
> app = shinyApp(
+   ui = fluidPage(leafletOutput('myMap')),
+   server = function(input, output) {
+     map = leaflet() %>% addProviderTiles(providers$CartoDB.Positron)
+     output$myMap = renderLeaflet(map)
+   }
+ )
-- render in browser
> if (interactive()) print(app)

-- shiny server import csv
  # import data from csv file ---
  output$contents <- renderTable({
    # checking for required file ---
    req(input$file1)
    # read uploaded file and save into local var ---
    data <- read.csv(input$file1$datapath,
                     header = input$header,
                     sep = input$sep,
                     quote = input$quote)
    head(data)
  })
-- shiny ui import csv
tabPanel("Import Data",
                              # Sidebar layout with input and output definitions ----
                              sidebarLayout(
                                # Sidebar panel for inputs ----
                                sidebarPanel(
                                  # Input: Select a file ----
                                  fileInput("file1", "Choose CSV File:",
                                            multiple = TRUE,
                                            accept = c("text/csv",
                                                       "text/comma-separated-values,text/plain",
                                                       ".csv")),
                                  # Input: Checkbox if file has header ----
                                  checkboxInput("header", "Header", TRUE),
                                  # Input: Select separator ----
                                  radioButtons("sep","Choose Separator:",
                                               choices = c(Comma = ",",
                                                           Semicolon = ";",
                                                           Tab = "\t"),
                                               selected = ","),
                                  # Input: Select quotes ----
                                  radioButtons("quote", "Choose Text Quotes:",
                                               choices = c(None = "",
                                                           "Double Quote" = '"',
                                                           "Single Quote" = "'"),
                                               selected = '"')
                                ),
                                # Main panel for displaying outputs ----
                                mainPanel(
                                  # Output: Data file ----
                                  tableOutput("contents")
                                )
                              )
                     )
